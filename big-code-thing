//gps
#include <TinyGPSPlus.h>
#include <SoftwareSerial.h>

//gps variables
//switch rxp,txp??
static const int RXPin = 4, TXPin = 5;
static const uint32_t GPSBaud = 9600;
// The TinyGPSPlus object
TinyGPSPlus gps;
// The serial connection to the GPS device
SoftwareSerial ss(RXPin, TXPin);

String gpsDisplayInfo(){
  char locAndTime[] = "@lat#+nnn.nn$@lon#-nnn.nn$@mon#nn$@day#nn$@year#nnnn$@hour#nn$@min#nn$@sec#nn$@csec#nn$";
  if (gps.location.isValid()){
  //latitude
    char lat[8];
    dtostrf(abs(gps.location.lat()),6,2,lat);
    if (gps.location.lat() <= 99.99 && gps.location.lat() >= 0){
      locAndTime[6] = '0';
      locAndTime[5] = '+';
    }else{
      if (gps.location.lat() < 0){
        locAndTime[5] = '-';
        if (gps.location.lat() >= -99.99){
          locAndTime[6] = '0';
        }
      }
      
    }
    if (locAndTime[6] != '0'){
        locAndTime[6] = lat[0];
      }
    for (int i = 7; i < 12; i++){
      locAndTime[i] = lat[i-6];  
    } 
// longitude
    char lng[8];
    dtostrf(abs(gps.location.lng()),6,2,lng);
    if (gps.location.lng() <= 99.99 && gps.location.lng() >= 0){
      locAndTime[19] = '0';
      locAndTime[18] = '+';
    }else{
      if (gps.location.lng() < 0){
        locAndTime[18] = '-';
        if (gps.location.lng() >= -99.99){
          locAndTime[19] = '0';
        }
      }
    }
    if (locAndTime[19] != '0'){
        locAndTime[19] = lng[0];
      }
    for (int i = 20; i < 25; i++){
      locAndTime[i] = lng[i-19];  
    } 
  } 

  if (gps.date.isValid()){
    char mon[3];
    //31 32
    sprintf(mon,"%d",gps.date.month());
    if (gps.date.month() < 10){
      locAndTime[31] = 0;
      locAndTime[32] = mon[0];
    } else{
      locAndTime[31] = mon[0];
      locAndTime[32] = mon[1];
    }
    //locAndTime += "@mon#" + gps.date.month() + "$";
   // locAndTime += "@day#" + gps.date.day() + "$";
    //locAndTime += "@year#" + gps.date.year() + "$";
  }else{
    //locAndtime += "INVALID";
  }

  if (gps.time.isValid()){
    //locAndTime += "@hour#" + gps.time.hour() + "$";
    //locAndTime += "@min#" + gps.time.minute() + "$";
    //locAndTime += "@sec#" + gps.time.second() + "$";
    //locAndTime += "@csec#" + gps.time.centisecond() + "$";
  }else{
    //locAndTime += "INVALID";
  }
  Serial.println(locAndTime);
  return locAndTime;
}

String gpsLoop(){
  while (ss.available() > 0){
    if (gps.encode(ss.read())){
      gpsDisplayInfo();
    } 
  }
      

  if (millis() > 5000 && gps.charsProcessed() < 10)
  {
    return ("No GPS detected: check wiring.");
    while(true);
  }
}

void gpsSetup(){
    Serial.begin(115200);
    ss.begin(GPSBaud);
}


void setup() {
  gpsSetup();
}

void loop() {
  gpsLoop();

}





